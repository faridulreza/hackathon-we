{"version":3,"file":"contentScript.acb79b279ecd72267033.hot-update.js","mappings":";;;;;;;;;;;;;;AAAA;AAEA;;AAEA;AACA;AACA;AAAA;AAEA;AAEA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;;AAEA;AAEA;;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAEA;AACA;AAEA;AADA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;;;;;;;;AChFA","sources":["webpack://chrome-extension-boilerplate-react/./src/pages/Content/modules/CIgetter.js","webpack://chrome-extension-boilerplate-react/webpack/runtime/getFullHash"],"sourcesContent":["import decide from \"./decider\";\r\n\r\nconst INTERVAL = 5000; //ms\r\n\r\nconst video = document.createElement(\"video\");\r\ndocument.body.append(video);\r\nconst cnv = document.createElement(\"canvas\"),\r\n  ctx = cnv.getContext(\"2d\");\r\ndocument.body.append(ctx);\r\n\r\ndocument.body.append(cnv);\r\n\r\nasync function loadCIndex(base64data) {\r\n  try {\r\n    var createCORSRequest = function (method, url) {\r\n      var xhr = new XMLHttpRequest();\r\n      if (\"withCredentials\" in xhr) {\r\n        // Most browsers.\r\n        xhr.open(method, url, true);\r\n      } else if (typeof XDomainRequest != \"undefined\") {\r\n        // IE8 & IE9\r\n        xhr = new XDomainRequest();\r\n        xhr.open(method, url);\r\n      } else {\r\n        // CORS not supported.\r\n        xhr = null;\r\n      }\r\n      return xhr;\r\n    };\r\n\r\n    var url =\r\n      \"https://c390-2400-a7c0-8000-b-1bf0-5fac-5ddd-b3b1.in.ngrok.io/api/v1/predict\";\r\n    var method = \"POST\";\r\n    var xhr = createCORSRequest(method, url);\r\n\r\n    xhr.onload = function () {\r\n      // Success code goes here.\r\n    };\r\n\r\n    xhr.onerror = function () {\r\n      // Error code goes here.\r\n    };\r\n\r\n    xhr.setRequestHeader(\"mode\", \"no-cors\");\r\n\r\n    xhr.send(JSON.stringify({ images: base64data }));\r\n  } catch (e) {\r\n    console.log(e);\r\n    decide(0);\r\n  }\r\n}\r\n\r\nfunction attentionMonitor() {\r\n  cnv.width = video.videoWidth;\r\n  cnv.height = video.videoHeight;\r\n  ctx.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\r\n  let data = cnv.toDataURL(\"image/png\");\r\n  data = data.split(\",\")[1];\r\n\r\n  loadCIndex(data);\r\n\r\n  setTimeout(attentionMonitor, INTERVAL);\r\n}\r\n\r\nfunction startAnalysis() {\r\n  navigator.mediaDevices\r\n    .getUserMedia({\r\n      video: true,\r\n    })\r\n    .then((stream) => {\r\n      console.log(\"Got Permission\");\r\n      video.srcObject = stream;\r\n      video.play();\r\n      attentionMonitor();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n}\r\n\r\nexport default startAnalysis;\r\n","__webpack_require__.h = () => (\"6dcff859516cb91964f9\")"],"names":[],"sourceRoot":""}